/*
* vs html:
The difference is that '*' selector will actually visit
every single element on the page and apply certain styles.
Whereas if we rely on inheritance,
the styles only get applied once
and the browser then just inherits them.
And from a performance perspective that is more efficient.
*/

*{
    box-sizing: border-box; /* The CSS box-sizing property allows us to include the padding and border in an element's total width and height. */
    /* We can't use inheritance for setting the 'box-sizing property because that is a non-inheritable property. Therefore we use in '*' and not 'html'. */
}
html{  /* all elements inherited from html element */
    font-family: 'Lemon', serif;
    --color-gray-50: rgb(243, 236, 230); /* css variable (see definition below). */
    --color-gray-100: rgb(207, 201, 195);
    --color-gray-300: rgb(99, 92, 86);
    --color-gray-400: rgb(70, 65, 60);
    --color-gray-500: rgb(37, 34, 31);
    --color-gray-600: rgb(32, 29, 26);
    --color-gray-700: rgb(31, 26, 22);
  
    --color-primary-50: rgb(253, 224, 200);
    --color-primary-100: rgb(253, 214, 183);
    --color-primary-200: rgb(250, 191, 143);
    --color-primary-400: rgb(223, 159, 41);
    --color-primary-500: rgb(212, 136, 14);
    --color-primary-700: rgb(212, 120, 14);
    --color-primary-200-contrast: rgb(100, 46, 2);
    --color-primary-500-contrast: white;
  
    --color-error-100: rgb(255, 192, 180);
    --color-error-500: rgb(199, 51, 15);
  
    --color-primary-500-bg: rgb(63, 60, 58);
  
    --space-1: 0.25rem;
    --space-2: 0.5rem;
    --space-4: 1rem;
    --space-6: 1.5rem;
    --space-8: 2rem;
  
    --border-radius-small: 4px; /* we don't need that border radius scale with the font size */
    --border-radius-medium: 6px;
  
    --shadow-medium: 0 2px 8px rgba(0, 0, 0, 0.2);
/*

css variable:
Set by using two dashes (--) and then any name of your choice.
CSS variables basically work like JavaScript variables.
You can use them to define a value once
and then use it repeatedly in different parts of your code.

'rem' unit:
rem is that special unit which is relative to the font size in the end.
And it's a great unit to use to ensure
that whenever your users set a different
font size than the default of 16 pixels,
your overall layout will scale with that font size
and your spaces, margins, paddings, which you're using
fit the bigger fonts.
That's why rem is a great unit to use.
And why it's often preferable to pixels or other units. */
}

body{
    background-color: var(--color-gray-500); /*in addition, VAR function can takes an optional second value which would be a fallback value if that variable isn't found. */
    color: var(--color-gray-100);
    margin: 0; /* I'll set margin to zero because by default many browsers give body a margin */
}

main{
    /* we center the main div using width: 90% and margin: auto */
    width: 90%; /* % - for width and height, refer to the available width/hight of the parent element. */
    max-width: 50rem; /* on bigger screens, a width of 90% quickly will be too wide. Therefore I'll always add the max-width property */
    margin: 0 auto;
}

ul, 
ol{
    /* overwritten browser default style thanks to specificity css rule: */
    list-style: none;
    margin: 0;
    padding: 0;
}

a{
    text-decoration: none;
    color: var(--color-primary-400);
}

.btn{
    cursor: pointer;
    font: inherit; /* the browser defaults targeting buttons do not inherit, and they have a higher specificity than the built-in inheritance And I want to force inheritance instead. */
    padding: var(--space-2) var(--space-6);
    background-color: var(--color-primary-500);
    color: var(--color-primary-500-contrast);
    border: 1px solid var(--color-primary-500); /* I use in pixel because i don't want fat border when the user change the size font */
    border-radius: var(--border-radius-small);
}

.btn:hover,
.btn:active {
    background-color: var(--color-primary-700);
    border-color: var(--color-primary-700);
}

.alert{
    border-radius: var(--border-radius-small);
    background-color: var(--color-error-100);
    color: var(--color-error-500);
    padding: var(--space-4);
}

.alert h2 {
    font-size: 1rem;
    margin: var(--space-2) 0;
    text-transform: uppercase; /*take any text that's in this element and it will turn all the characters into upper case characters. */
}

.alert p {
    margin: var(--space-2) 0;
}